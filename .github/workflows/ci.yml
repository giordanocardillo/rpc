#*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

name: Build RPC (Native)

on:
  pull_request:
    branches: [ main ]
   
env:
  BUILD_TYPE: Release

jobs:

  build-windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Create Build Dir
      run: mkdir build
    - name: Clone
      run: git clone https://github.com/microsoft/vcpkg.git  && cd vcpkg && git checkout 772d435ba18bf2f342458e0187ab7b48b84fe3f0
    - name: Build VCPKG
      run: cd vcpkg && bootstrap-vcpkg.bat
      shell: cmd
    - name: dir
      run: ls
    - name: dir
      run: cd vcpkg && ls
    - name: Install C++ REST SDK
      run:  ${{ runner.workspace }}\rpc\vcpkg\vcpkg.exe install cpprestsdk[websockets]:x64-windows-static
      shell: cmd
    - name: dir
      run: ls && cd vcpkg && ls
      shell: bash
    - name: Prepare for build
      run:  cd build && cmake .. -DCMAKE_PREFIX_PATH=D:/a/rpc/rpc/vcpkg/installed/x64-windows-static -DVCPKG_TARGET_TRIPLET=x64-windows-static -DCMAKE_TOOLCHAIN_FILE=D:/a/rpc/rpc/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: Build RPC (Release)
      run: cd build && cmake --build . --config Release
    - name: Build RPC (Debug)
      run: cd build && cmake --build . --config Debug
        
  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: sudo apt install git cmake build-essential curl zip unzip tar pkg-config
    - name: Create Build Dir
      run: mkdir build
    - name: Clone
      run: git clone https://github.com/microsoft/vcpkg.git && cd vcpkg && git checkout 772d435ba18bf2f342458e0187ab7b48b84fe3f0
    - name: Build VCPKG
      run: cd vcpkg && ./bootstrap-vcpkg.sh
      shell: bash
    - name: dir
      run: ls
    - name: dir
      run: cd vcpkg && ls
    - name: Install C++ REST SDK
      run:  ${{ runner.workspace }}/rpc/vcpkg/vcpkg install cpprestsdk[websockets]
      shell: bash
    - name: dir
      run: ls && cd vcpkg && ls
      shell: bash
    - name: Prepare for build
      run:  cd build && cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=${{ runner.workspace }}/rpc/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: Build RPC
      run: cd build && cmake --build .
